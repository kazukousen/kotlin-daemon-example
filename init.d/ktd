# !/bin/bash
#
# ktd        Startup script for the jobd
#
# chkconfig: - 85 15
# description: The JobWatcher.
# processname: ktd
#
### BEGIN INIT INFO
# Provides: ktd
# Required-Start: $local_fs $remote_fs $network $named
# Required-Stop: $local_fs $remote_fs $network
# Should-Start: distcache
# Short-Description: start and stop ktd
# Description: ktd
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

dir="/path/to/kt_example"
cmd="java -jar kt_example-1.0-jar-with-dependencies.jar"

name=`basename ${0}`
pid_file="/var/run/${name}.pid"
stdout_log="/var/log/${name}/running.log"
stderr_log="/var/log/${name}/error.log"

get_pid() {
    cat "${pid_file}"
}

is_running() {
    [ -f "${pid_file}" ] && ps -p `get_pid` > /dev/null 2>&1
}

case "${1}" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        $cmd >> "${stdout_log}" 2>> "${stderr_log}" &
        echo $! > "${pid_file}"
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
        echo "OK"
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping ${name}.."
        kill `get_pid`
        for i in 1 2 3 4 5 6 7 8 9 10
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "${pid_file}" ]; then
                rm "${pid_file}"
            fi
        fi
    else
        echo "Not runnning"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
}